{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"matriz_de_confusion.py","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMwU2+UPZmgibQN9ZT0+Bgo"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"VbDT1lFsxftQ"},"source":["from sklearn.metrics import confusion_matrix\r\n","import matplotlib.pyplot as plt\r\n","import numpy as np\r\n","\r\n","def graficar_matriz_de_confusion(y_ref, y_pred, clases, cmap=plt.cm.Blues):\r\n","\r\n","    titulo = 'Matriz de confusión'\r\n","\r\n","    cm = confusion_matrix(y_ref, y_pred)\r\n","\r\n","    # Generar figura\r\n","    fig, ax = plt.subplots()\r\n","    im = ax.imshow(cm, interpolation='nearest', cmap=cmap)\r\n","    ax.set(xticks=np.arange(cm.shape[1]),\r\n","           yticks=np.arange(cm.shape[0]),\r\n","           xticklabels=clases, yticklabels=clases,\r\n","           title=titulo,\r\n","           ylabel='Categoría real',\r\n","           xlabel='Predicción')\r\n","\r\n","    # Rotar y alinear ticks\r\n","    plt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\r\n","             rotation_mode=\"anchor\")\r\n","\r\n","    # Rellenar gráfica con los valores de la matriz de confusión\r\n","    fmt = 'd'\r\n","    thresh = cm.max() / 2.\r\n","    for i in range(cm.shape[0]):\r\n","        for j in range(cm.shape[1]):\r\n","            ax.text(j, i, format(cm[i, j], fmt),\r\n","                    ha=\"center\", va=\"center\",\r\n","                    color=\"white\" if cm[i, j] > thresh else \"black\")\r\n","    fig.tight_layout()\r\n","    plt.show()"],"execution_count":null,"outputs":[]}]}